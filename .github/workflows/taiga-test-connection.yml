name: Test Taiga Connection

on:
  workflow_dispatch:

env:
  TAIGA_API: https://api.taiga.io/api/v1
  TAIGA_USERNAME: gjhonic

jobs:
  test-connection:
    runs-on: ubuntu-latest

    steps:
      - name: Test Taiga API connection
        env:
          TAIGA_USERNAME: ${{ env.TAIGA_USERNAME }}
          TAIGA_PASSWORD: ${{ secrets.TAIGA_PASSWORD }}
          TAIGA_API: ${{ env.TAIGA_API }}
        run: |
          echo "Testing connection to: $TAIGA_API"
          
          # Test 1: Check if API is accessible
          echo "=== Test 1: API Accessibility ==="
          API_RESPONSE=$(curl -s -w "%{http_code}" "$TAIGA_API/")
          HTTP_CODE="${API_RESPONSE: -3}"
          RESPONSE_BODY="${API_RESPONSE%???}"
          echo "HTTP Code: $HTTP_CODE"
          echo "Response: $RESPONSE_BODY"
          
          # Test 2: Try authentication
          echo "=== Test 2: Authentication ==="
          AUTH_PAYLOAD=$(jq -n \
            --arg username "$TAIGA_USERNAME" \
            --arg password "$TAIGA_PASSWORD" \
            '{type: "normal", username: $username, password: $password}')
          
          echo "Auth payload: $AUTH_PAYLOAD"
          
          AUTH_RESPONSE=$(curl -s -w "%{http_code}" -X POST "$TAIGA_API/auth" \
            -H "Content-Type: application/json" \
            -d "$AUTH_PAYLOAD")
          
          AUTH_HTTP_CODE="${AUTH_RESPONSE: -3}"
          AUTH_BODY="${AUTH_RESPONSE%???}"
          echo "Auth HTTP Code: $AUTH_HTTP_CODE"
          echo "Auth Response: $AUTH_BODY"
          
          if [[ "$AUTH_HTTP_CODE" == "200" ]]; then
            TOKEN=$(echo "$AUTH_BODY" | jq -r '.auth_token')
            echo "Successfully authenticated! Token: ${TOKEN:0:20}..."
            
            # Test 3: Get user info
            echo "=== Test 3: User Info ==="
            USER_RESPONSE=$(curl -s -X GET "$TAIGA_API/users/me" \
              -H "Authorization: Bearer $TOKEN")
            echo "User info: $USER_RESPONSE"
            
            # Test 4: Get projects
            echo "=== Test 4: Projects ==="
            PROJECTS_RESPONSE=$(curl -s -X GET "$TAIGA_API/projects" \
              -H "Authorization: Bearer $TOKEN")
            echo "Projects: $PROJECTS_RESPONSE"
            
          else
            echo "Authentication failed!"
            exit 1
          fi 