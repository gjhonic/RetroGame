{% extends 'admin/admin_base.html.twig' %}

{% block title %}Админка{% endblock %}

{% block body %}
    <h2 class="mb-4">Привет, {{ app.user ? app.user.name() : 'Гость' }}, твой дашборд</h2>

    <!-- Статистика -->
    <div class="row mb-4">
        <div class="col-md-6 mb-3">
            <div class="card bg-primary text-white shadow-sm stats-card">
                <div class="card-body text-center">
                    <div class="d-flex align-items-center justify-content-center mb-2">
                        <i class="fas fa-gamepad fa-2x me-3 stats-icon"></i>
                        <div>
                            <h3 class="mb-0">{{ totalGames|number_format(0, ',', ' ') }}</h3>
                            <small>Всего игр</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6 mb-3">
            <div class="card bg-success text-white shadow-sm stats-card">
                <div class="card-body text-center">
                    <div class="d-flex align-items-center justify-content-center mb-2">
                        <i class="fas fa-tags fa-2x me-3 stats-icon"></i>
                        <div>
                            <h3 class="mb-0">{{ totalPrices|number_format(0, ',', ' ') }}</h3>
                            <small>Всего цен</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row mb-4">
        <div class="col-12">
            <div class="card bg-info text-white shadow-sm stats-card">
                <div class="card-body">
                    <h5 class="card-title mb-4">
                        <i class="fas fa-store me-2 stats-icon"></i>Игры по магазинам
                    </h5>
                    <div class="row">
                        {% for shop in shopsWithGameCount %}
                            <div class="col-md-3 col-sm-6 mb-3">
                                <div class="d-flex align-items-center">
                                    {% if shop.image %}
                                        <img src="{{ asset('uploads/shops/' ~ shop.image) }}" 
                                             alt="{{ shop.name }}" 
                                             class="me-3 shop-image-large">
                                    {% else %}
                                        <div class="me-3 shop-placeholder-large"></div>
                                    {% endif %}
                                    <div class="flex-grow-1">
                                        <div class="shop-name">{{ shop.name }}</div>
                                        <div class="shop-count">{{ shop.game_count|number_format(0, ',', ' ') }}</div>
                                    </div>
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <form method="get" class="row g-2 align-items-end mb-3">
                <div class="col-auto">
                    <input type="date" id="dateFrom" name="dateFrom" class="form-control" value="{{ dateFrom }}">
                </div>
                <div class="col-auto">
                    <input type="date" id="dateTo" name="dateTo" class="form-control" value="{{ dateTo }}">
                </div>
                <div class="col-auto">
                    <button type="submit" class="btn btn-primary">Показать</button>
                </div>
            </form>
        </div>
    </div>

    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <h5 class="card-title mb-3">Импортировано игр по площадкам</h5>
            <div class="chart-container" style="position: relative; height: 300px;">
                <canvas id="importChart"></canvas>
            </div>
        </div>
    </div>

    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <h5 class="card-title mb-3">Импортировано цен по дням</h5>
            <div class="chart-container" style="position: relative; height: 300px;">
                <canvas id="importPriceChart"></canvas>
            </div>
        </div>
    </div>

    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <h5 class="card-title mb-3">Всего игр по торговым площадкам</h5>
            <div style="height: 300px; position: relative;">
                <canvas id="totalGamesChart"></canvas>
            </div>
        </div>
    </div>

    <style>
        .stats-card {
            transition: transform 0.2s ease-in-out;
        }
        .stats-card:hover {
            transform: translateY(-2px);
        }
        .stats-icon {
            opacity: 0.9;
        }
        .shop-image {
            width: 24px;
            height: 24px;
            object-fit: cover;
            border-radius: 4px;
            border: 1px solid rgba(255,255,255,0.2);
        }
        .shop-placeholder {
            width: 24px;
            height: 24px;
            background: rgba(255,255,255,0.2);
            border-radius: 4px;
            border: 1px solid rgba(255,255,255,0.3);
        }
        .shop-image-large {
            width: 60px;
            height: 60px;
            object-fit: cover;
            border-radius: 8px;
            border: 2px solid rgba(255,255,255,0.3);
        }
        .shop-placeholder-large {
            width: 60px;
            height: 60px;
            background: rgba(255,255,255,0.2);
            border-radius: 8px;
            border: 2px solid rgba(255,255,255,0.3);
        }
        .shop-name {
            font-size: 0.9rem;
            font-weight: 500;
            margin-bottom: 2px;
            opacity: 0.9;
        }
        .shop-count {
            font-size: 1.4rem;
            font-weight: 700;
            line-height: 1.2;
        }
    </style>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Готовим данные для графика
        const rawStats = {{ importStats|json_encode|raw }};
        // Собираем уникальные даты и площадки
        const dates = [...new Set(rawStats.map(r => r.date))].sort();
        const shops = [...new Set(rawStats.map(r => r.shop))];
        // Цвета для площадок
        const palette = [
            'rgba(199, 101, 101, 0.85)',
            'rgba(70, 156, 206, 0.85)',
            'rgba(198, 199, 198, 0.85)',
            'rgba(40, 167, 69, 0.85)',
            'rgba(255, 159, 64, 0.85)',
            'rgba(255, 206, 86, 0.85)',
            'rgba(75, 192, 192, 0.85)',
            'rgba(231, 233, 237, 0.85)'
        ];
        // Формируем данные для каждой площадки
        const datasets = shops.map((shop, idx) => {
            return {
                label: shop,
                data: dates.map(date => {
                    const found = rawStats.find(r => r.date === date && r.shop === shop);
                    return found ? found.count : 0;
                }),
                backgroundColor: palette[idx % palette.length],
                borderColor: palette[idx % palette.length],
                borderWidth: 1
            };
        });
        const ctx = document.getElementById('importChart').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: dates,
                datasets: datasets
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { 
                        position: 'top',
                        labels: {
                            boxWidth: 12,
                            padding: 8
                        }
                    },
                    title: { display: false }
                },
                scales: {
                    y: { 
                        beginAtZero: true, 
                        title: { display: true, text: 'Импортировано игр' },
                        ticks: {
                            font: {
                                size: window.innerWidth < 768 ? 10 : 12
                            }
                        }
                    },
                    x: { 
                        title: { display: true, text: 'Дата' }, 
                        stacked: true,
                        ticks: {
                            font: {
                                size: window.innerWidth < 768 ? 10 : 12
                            }
                        }
                    },
                    y: { ...this.y, stacked: true }
                }
            }
        });

        // График по импортированным ценам
        const priceStats = {{ importPriceStats|json_encode|raw }};
        const priceDates = priceStats.map(r => r.date).sort();
        const priceCounts = priceDates.map(date => {
            const found = priceStats.find(r => r.date === date);
            return found ? found.count : 0;
        });
        const ctxPrice = document.getElementById('importPriceChart').getContext('2d');
        new Chart(ctxPrice, {
            type: 'bar',
            data: {
                labels: priceDates,
                datasets: [{
                    label: 'Импортировано цен',
                    data: priceCounts,
                    backgroundColor: 'rgba(70, 156, 206, 0.85)',
                    borderColor: 'rgba(70, 156, 206, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { display: false },
                    title: { display: false }
                },
                scales: {
                    y: { 
                        beginAtZero: true, 
                        title: { display: true, text: 'Импортировано цен' },
                        ticks: {
                            font: {
                                size: window.innerWidth < 768 ? 10 : 12
                            }
                        }
                    },
                    x: { 
                        title: { display: true, text: 'Дата' },
                        ticks: {
                            font: {
                                size: window.innerWidth < 768 ? 10 : 12
                            }
                        }
                    }
                }
            }
        });

        // График общего количества игр по площадкам
        const totalGamesStats = {{ totalGamesByShop|json_encode|raw }};
        const shopNames = totalGamesStats.map(r => r.shop);
        const shopCounts = totalGamesStats.map(r => parseInt(r.count));
        
        const ctxTotalGames = document.getElementById('totalGamesChart').getContext('2d');
        new Chart(ctxTotalGames, {
            type: 'doughnut',
            data: {
                labels: shopNames,
                datasets: [{
                    data: shopCounts,
                    backgroundColor: [
                        'rgba(199, 101, 101, 0.85)',
                        'rgba(70, 156, 206, 0.85)',
                        'rgba(198, 199, 198, 0.85)',
                        'rgba(40, 167, 69, 0.85)',
                        'rgba(255, 159, 64, 0.85)',
                        'rgba(255, 206, 86, 0.85)',
                        'rgba(75, 192, 192, 0.85)',
                        'rgba(231, 233, 237, 0.85)'
                    ],
                    borderColor: [
                        'rgba(199, 101, 101, 1)',
                        'rgba(70, 156, 206, 1)',
                        'rgba(198, 199, 198, 1)',
                        'rgba(40, 167, 69, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(231, 233, 237, 1)'
                    ],
                    borderWidth: 2
                }]
            },
            options: {
                responsive: false,
                maintainAspectRatio: false,
                plugins: {
                    legend: { 
                        position: 'right',
                        labels: {
                            boxWidth: 12,
                            padding: 8
                        }
                    },
                    title: { display: false },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = ((context.parsed / total) * 100).toFixed(1);
                                return `${context.label}: ${context.parsed} (${percentage}%)`;
                            }
                        }
                    }
                }
            }
        });
    </script>
{% endblock %}
